
Practica05.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000122  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000196  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000762  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000644  00000000  00000000  000009ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000333  00000000  00000000  0000100e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b8  00000000  00000000  00001344  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000414  00000000  00000000  000013fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000049  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00001859  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 6b 00 	call	0xd6	; 0xd6 <main>
  88:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <init_ports>:
{
	/******* 1 - Desabilitar reloj *******/
	// No clock source	- 0 0 0
	TCCR1B &= ~( _BV(CS10) );	// 0
	TCCR1B &= ~( _BV(CS11) );	// 0
	TCCR1B &= ~( _BV(CS12) );	// 0
  90:	84 b1       	in	r24, 0x04	; 4
  92:	81 60       	ori	r24, 0x01	; 1
  94:	84 b9       	out	0x04, r24	; 4
  96:	85 b1       	in	r24, 0x05	; 5
  98:	8e 7f       	andi	r24, 0xFE	; 254
  9a:	85 b9       	out	0x05, r24	; 5
  9c:	08 95       	ret

0000009e <init_timer0>:
  9e:	84 b5       	in	r24, 0x24	; 36
  a0:	8e 7f       	andi	r24, 0xFE	; 254
  a2:	84 bd       	out	0x24, r24	; 36
  a4:	84 b5       	in	r24, 0x24	; 36
  a6:	82 60       	ori	r24, 0x02	; 2
  a8:	84 bd       	out	0x24, r24	; 36
  aa:	85 b5       	in	r24, 0x25	; 37
  ac:	87 7f       	andi	r24, 0xF7	; 247
  ae:	85 bd       	out	0x25, r24	; 37
  b0:	81 e6       	ldi	r24, 0x61	; 97
  b2:	87 bd       	out	0x27, r24	; 39
  b4:	ee e6       	ldi	r30, 0x6E	; 110
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	82 60       	ori	r24, 0x02	; 2
  bc:	80 83       	st	Z, r24
  be:	08 95       	ret

000000c0 <timer0_on>:
  c0:	16 bc       	out	0x26, r1	; 38
  c2:	85 b5       	in	r24, 0x25	; 37
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	85 bd       	out	0x25, r24	; 37
  c8:	85 b5       	in	r24, 0x25	; 37
  ca:	8d 7f       	andi	r24, 0xFD	; 253
  cc:	85 bd       	out	0x25, r24	; 37
  ce:	85 b5       	in	r24, 0x25	; 37
  d0:	84 60       	ori	r24, 0x04	; 4
  d2:	85 bd       	out	0x25, r24	; 37
  d4:	08 95       	ret

000000d6 <main>:
  d6:	f8 94       	cli
  d8:	0e 94 48 00 	call	0x90	; 0x90 <init_ports>
  dc:	0e 94 4f 00 	call	0x9e	; 0x9e <init_timer0>
  e0:	0e 94 60 00 	call	0xc0	; 0xc0 <timer0_on>
  e4:	78 94       	sei
  e6:	ff cf       	rjmp	.-2      	; 0xe6 <main+0x10>

000000e8 <__vector_14>:
	// TCCR01 - Timer Counter Control Register 1B
	// CS1#   - Clock Select 1#
}

ISR(TIMER0_COMPA_vect)
{
  e8:	1f 92       	push	r1
  ea:	0f 92       	push	r0
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	0f 92       	push	r0
  f0:	11 24       	eor	r1, r1
  f2:	8f 93       	push	r24
  f4:	9f 93       	push	r25
	seg++;
  f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  fa:	8f 5f       	subi	r24, 0xFF	; 255
  fc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	if ( seg >= 10 )
 100:	8a 30       	cpi	r24, 0x0A	; 10
 102:	30 f0       	brcs	.+12     	; 0x110 <__vector_14+0x28>
	{
		LED_TGGLE;
 104:	95 b1       	in	r25, 0x05	; 5
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	89 27       	eor	r24, r25
 10a:	85 b9       	out	0x05, r24	; 5
		seg = 0;
 10c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
}
 110:	9f 91       	pop	r25
 112:	8f 91       	pop	r24
 114:	0f 90       	pop	r0
 116:	0f be       	out	0x3f, r0	; 63
 118:	0f 90       	pop	r0
 11a:	1f 90       	pop	r1
 11c:	18 95       	reti

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
